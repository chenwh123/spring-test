package com.haday.qms.${controller};

import com.baomidou.dynamic.datasource.annotation.DS;
import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import com.haday.qms.controller.base.BaseController;
import com.haday.qms.core.tool.api.R;
import com.haday.qms.core.tool.utils.StringUtil;
import com.haday.qms.${dao}.${name}Mapper;
import com.haday.qms.${entity}.${name};
import com.haday.qms.${serviceImpl}.${name}ServiceImpl;
import com.haday.qms.interceptor.anno.Auth;
import com.haday.qms.vo.SearchVo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * @author chenwh3
 */
@RestController
@RequestMapping("")
@Api(value = "", tags = "")
public class ${name}Controller extends BaseController<${name}ServiceImpl, ${name}Mapper, ${name}> {


    @Override
    @ApiOperationSupport(order = 1)
    @ApiOperation(value = "批量保存", notes = "批量保存")
    @PostMapping("/batchAdd")
    @DS(StringUtil.DB_GM)
    @Auth
    public R batchAdd(@RequestBody List<${name}> list) {
        return super.batchAdd(list);
    }

    @Override
    @ApiOperationSupport(order = 2)
    @ApiOperation(value = "更新", notes = "删除")
    @PostMapping("/update")
    @DS(StringUtil.DB_GM)
    @Auth
    public R update(@RequestBody ${name} obj) {
        return super.update(obj);
    }

    @Override
    @ApiOperationSupport(order = 3)
    @ApiOperation(value = "删除", notes = "删除")
    @PostMapping("/delete")
    @DS(StringUtil.DB_GM)
    @Auth
    public R delete(@RequestParam("id") String id) {
        return super.delete(id);
    }



    @Override
    @ApiOperationSupport(order = 4)
    @ApiOperation(value = "查询", notes = "更新")
    @PostMapping("/search")
    @DS(StringUtil.DB_GM)
    @Auth
    public R search(@RequestBody @Validated SearchVo obj) {
        return super.search(obj);
    }


    @Override
    @ApiOperationSupport(order = 5)
    @ApiOperation(value = "批量删除", notes = "批量删除")
    @PostMapping("/batchDelete")
    @DS(StringUtil.DB_GM)
    @Auth
    public R batchDelete(@RequestBody List<String> id) {
        return super.batchDelete(id);
    }
}
